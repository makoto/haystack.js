/*  haystack.js Needle in a haystack, version 0.1.0
 *  (c) 2011 Makoto Inoue
 *
 *  Released under MIT license.
 */
var map=Array.prototype.map?function(b,f,a){return b.map(f,a)}:function(b,f,a){if(b===void 0||b===null)throw new TypeError;b=Object(b);var d=b.length>>>0;if(typeof f!=="function")throw new TypeError;for(var c=Array(d),e=0;e<d;e++)if(e in b)c[e]=f.call(a,b[e],e,b);return c};
Haystack=function(){var b=function(a,d,c){c=c||"";var e=[],g;for(g in d){var h=d[g];a(g,h)&&e.push(c+'["'+g+'"]');if(typeof h=="object")e=e.concat(b(a,h,c+'["'+g+'"]'))}e.matched=function(){return this.map(function(i){return eval("collection"+i)})};return e},f=function(a){this.list=a};f.prototype.key=function(a){return b(function(d){return d==a},this.list)};f.prototype.val=function(a){return b(function(d,c){return c==a},this.list)};f.prototype.all=function(a){return b(function(d,c){return c==a||d==
a},this.list)};f.prototype.any=function(a){return b(a,this.list)};f.prototype.reg=function(a){return b(function(d,c){return result=typeof c=="string"?d.match(a)||c.match(a):d.match(a)},this.list)};return f}();H=function(b){return new Haystack(b)};
